{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"H:\\\\HK4\\\\Android\\\\ReactNative\\\\Fleur\\\\screens\\\\login\\\\index.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useForm, Controller } from 'react-hook-form';\nimport Constants from 'expo-constants';\nimport axios from 'axios';\nexport default (function () {\n  var _useForm = useForm(),\n      register = _useForm.register,\n      setValue = _useForm.setValue,\n      handleSubmit = _useForm.handleSubmit,\n      control = _useForm.control,\n      reset = _useForm.reset,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {\n    console.log(data);\n    console.log(\"ok\");\n    axios.post(config.api + \"/Login_tmp.php\", _objectSpread(_objectSpread({}, data), {}, {\n      signin: true\n    })).then(function (res) {\n      console.log(res);\n    });\n    console.log(\"ok2\");\n  };\n\n  var onChange = function onChange(arg) {\n    return {\n      value: arg.nativeEvent.text\n    };\n  };\n\n  console.log(errors);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"First name\"), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref) {\n      var _ref$field = _ref.field,\n          onChange = _ref$field.onChange,\n          onBlur = _ref$field.onBlur,\n          value = _ref$field.value;\n      return React.createElement(TextInput, {\n        style: styles.input,\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      });\n    },\n    name: \"username\",\n    rules: {\n      required: true\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Last name\"), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref2) {\n      var _ref2$field = _ref2.field,\n          onChange = _ref2$field.onChange,\n          onBlur = _ref2$field.onBlur,\n          value = _ref2$field.value;\n      return React.createElement(TextInput, {\n        style: styles.input,\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      });\n    },\n    name: \"password\",\n    rules: {\n      required: true\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    style: styles.buttonInner,\n    color: true,\n    title: \"Button\",\n    onPress: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })));\n});\nvar styles = StyleSheet.create({\n  label: {\n    color: 'white',\n    margin: 20,\n    marginLeft: 0\n  },\n  button: {\n    marginTop: 40,\n    color: 'white',\n    height: 40,\n    backgroundColor: '#ec5990',\n    borderRadius: 4\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingTop: Constants.statusBarHeight,\n    padding: 8,\n    backgroundColor: '#0e101c'\n  },\n  input: {\n    backgroundColor: 'white',\n    borderColor: 'none',\n    height: 40,\n    padding: 10,\n    borderRadius: 4\n  }\n});","map":{"version":3,"sources":["H:/HK4/Android/ReactNative/Fleur/screens/login/index.jsx"],"names":["React","useForm","Controller","Constants","axios","register","setValue","handleSubmit","control","reset","errors","onSubmit","data","console","log","post","config","api","signin","then","res","onChange","arg","value","nativeEvent","text","styles","container","label","field","onBlur","input","required","button","buttonInner","StyleSheet","create","color","margin","marginLeft","marginTop","height","backgroundColor","borderRadius","flex","justifyContent","paddingTop","statusBarHeight","padding","borderColor"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Text, View, StyleSheet, TextInput, Button, Alert } from 'react-native';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport Constants from 'expo-constants';\r\nimport axios from 'axios';\r\n\r\nexport default () => {\r\n  const { register, setValue, handleSubmit, control, reset, errors } = useForm();\r\n  const onSubmit = data => {\r\n    console.log(data);\r\n    console.log(\"ok\");\r\n    axios.post(config.api+\"/Login_tmp.php\",{...data,signin:true}).then((res) => {\r\n        console.log(res);\r\n    })\r\n   console.log(\"ok2\");\r\n  };\r\n\r\n  const onChange = arg => {\r\n    return {\r\n      value: arg.nativeEvent.text,\r\n    };\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.label}>First name</Text>\r\n      <Controller\r\n        control={control}\r\n        render={({field: { onChange, onBlur, value }}) => (\r\n          <TextInput\r\n            style={styles.input}\r\n            onBlur={onBlur}\r\n            onChangeText={value => onChange(value)}\r\n            value={value}\r\n          />\r\n        )}\r\n        name=\"username\"\r\n        rules={{ required: true }}\r\n      />\r\n      <Text style={styles.label}>Last name</Text>\r\n      <Controller\r\n        control={control}\r\n        render={({field: { onChange, onBlur, value }}) => (\r\n          <TextInput\r\n            style={styles.input}\r\n            onBlur={onBlur}\r\n            onChangeText={value => onChange(value)}\r\n            value={value}\r\n          />\r\n        )}\r\n        name=\"password\"\r\n        rules={{ required: true }}\r\n      />\r\n      <View style={styles.button}>\r\n        <Button\r\n          style={styles.buttonInner}\r\n          color\r\n          title=\"Button\"\r\n          onPress={handleSubmit(onSubmit)}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  label: {\r\n    color: 'white',\r\n    margin: 20,\r\n    marginLeft: 0,\r\n  },\r\n  button: {\r\n    marginTop: 40,\r\n    color: 'white',\r\n    height: 40,\r\n    backgroundColor: '#ec5990',\r\n    borderRadius: 4,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    paddingTop: Constants.statusBarHeight,\r\n    padding: 8,\r\n    backgroundColor: '#0e101c',\r\n  },\r\n  input: {\r\n    backgroundColor: 'white',\r\n    borderColor: 'none',\r\n    height: 40,\r\n    padding: 10,\r\n    borderRadius: 4,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
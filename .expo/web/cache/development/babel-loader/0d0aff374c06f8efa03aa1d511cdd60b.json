{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"H:\\\\HK4\\\\Android\\\\ReactNative\\\\Fleur\\\\screens\\\\product\\\\index.jsx\";\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport api from \"../../api\";\nimport config from \"../../api/config\";\nimport ItemFlower from \"./ItemFlower\";\nimport DetailPrd from \"./DetailPrd\";\nimport { SearchBar } from 'react-native-elements';\n\nvar Product = function Product(props) {\n  var navigation = props.navigation;\n\n  var handleDetail = function handleDetail(id) {\n    console.log(id);\n    navigation.navigate(\"Detail\", {\n      id: id\n    });\n  };\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      flowers = _useState2[0],\n      setflowers = _useState2[1];\n\n  console.log(\"lan render \" + Math.random());\n  useEffect(function () {\n    axios.get(config.api + \"/index_tmp.php\").then(function (response) {\n      console.log(response.data);\n      console.log(\"ta da lay dc dataa roi, m dung goi t nuwa. re render lai di\");\n      setflowers(response.data);\n    });\n  }, []);\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      textSearch = _useState4[0],\n      settextSearch = _useState4[1];\n\n  var updateSearch = function updateSearch(text) {\n    settextSearch(text);\n  };\n\n  return React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(SearchBar, {\n    lightTheme: true,\n    round: true,\n    onChangeText: updateSearch,\n    disabled: false,\n    placeholder: \"T\\xECm ki\\u1EBFm...\",\n    value: textSearch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 8\n    }\n  }, flowers == null ? void 0 : flowers.map(function (flower, index) {\n    return React.createElement(ItemFlower, {\n      handleDetail: handleDetail,\n      key: flower.id_prd,\n      data: flower,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 24\n      }\n    });\n  }))));\n};\n\nexport default Product;","map":{"version":3,"sources":["H:/HK4/Android/ReactNative/Fleur/screens/product/index.jsx"],"names":["axios","React","useEffect","useState","api","config","ItemFlower","DetailPrd","SearchBar","Product","props","navigation","handleDetail","id","console","log","navigate","flowers","setflowers","Math","random","get","then","response","data","textSearch","settextSearch","updateSearch","text","map","flower","index","id_prd"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;AAEA,OAAOC,GAAP;AACA,OAAOC,MAAP;AACA,OAAOC,UAAP;AACA,OAAOC,SAAP;AACA,SAAQC,SAAR,QAAyB,uBAAzB;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AACvB,MAAMC,UAAU,GAAGD,KAAK,CAACC,UAAzB;;AACA,MAAMC,YAAY,GAAC,SAAbA,YAAa,CAACC,EAAD,EAAM;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AAEAF,IAAAA,UAAU,CAACK,QAAX,CAAoB,QAApB,EAA6B;AACzBH,MAAAA,EAAE,EAACA;AADsB,KAA7B;AAGH,GAND;;AAOA,kBAA8BV,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOc,OAAP;AAAA,MAAgBC,UAAhB;;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAcI,IAAI,CAACC,MAAL,EAA1B;AACAlB,EAAAA,SAAS,CAAC,YAAM;AACZF,IAAAA,KAAK,CAACqB,GAAN,CAAUhB,MAAM,CAACD,GAAP,GAAW,gBAArB,EAAuCkB,IAAvC,CAA4C,UAACC,QAAD,EAAa;AACrDT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAQ,CAACC,IAArB;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,6DAAZ;AACAG,MAAAA,UAAU,CAACK,QAAQ,CAACC,IAAV,CAAV;AACH,KAJD;AAMH,GAPQ,EAON,EAPM,CAAT;;AAQA,mBAAoCrB,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOsB,UAAP;AAAA,MAAmBC,aAAnB;;AACA,MAAMC,YAAY,GAAE,SAAdA,YAAc,CAACC,IAAD,EAAS;AAEzBF,IAAAA,aAAa,CAACE,IAAD,CAAb;AACH,GAHD;;AAIA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA,oBAAC,SAAD;AACA,IAAA,UAAU,MADV;AAEA,IAAA,KAAK,MAFL;AAGA,IAAA,YAAY,EAAED,YAHd;AAIA,IAAA,QAAQ,EAAE,KAJV;AAKA,IAAA,WAAW,EAAC,qBALZ;AAMA,IAAA,KAAK,EAAEF,UANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAWD,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,OADL,oBACKA,OAAO,CAAEY,GAAT,CAAa,UAACC,MAAD,EAAQC,KAAR,EAAgB;AAC1B,WAAQ,oBAAC,UAAD;AAAa,MAAA,YAAY,EAAEnB,YAA3B;AAAyC,MAAA,GAAG,EAAEkB,MAAM,CAACE,MAArD;AAA6D,MAAA,IAAI,EAAEF,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACH,GAFA,CADL,CAXC,CADA,CADJ;AAuBH,CA/CD;;AAiDA,eAAerB,OAAf","sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Text, View, ScrollView ,Button} from 'react-native';\r\nimport api from '../../api';\r\nimport config from '../../api/config';\r\nimport ItemFlower from './ItemFlower';\r\nimport DetailPrd from './DetailPrd';\r\nimport {SearchBar } from 'react-native-elements';\r\nconst Product = (props) => {\r\n    const navigation = props.navigation;\r\n    const handleDetail=(id)=>{\r\n        console.log(id);\r\n\r\n        navigation.navigate(\"Detail\",{\r\n            id:id\r\n        })\r\n    }\r\n    const [flowers, setflowers] = useState([]);\r\n    console.log(\"lan render \"+Math.random());\r\n    useEffect(() => {\r\n        axios.get(config.api+\"/index_tmp.php\").then((response) =>{\r\n            console.log(response.data);\r\n            console.log(\"ta da lay dc dataa roi, m dung goi t nuwa. re render lai di\");\r\n            setflowers(response.data)\r\n        }\r\n     )  \r\n    }, []);\r\n    const [textSearch, settextSearch] = useState(\"\");\r\n    const updateSearch =(text) =>{\r\n        \r\n        settextSearch(text);\r\n    }\r\n    return (\r\n        <ScrollView>\r\n        <View>\r\n           \r\n        <SearchBar \r\n        lightTheme\r\n        round\r\n        onChangeText={updateSearch}\r\n        disabled={false}\r\n        placeholder=\"Tìm kiếm...\"\r\n        value={textSearch}\r\n        />\r\n      \r\n       <ScrollView>\r\n           {flowers?.map((flower,index)=>{\r\n               return( <ItemFlower  handleDetail={handleDetail} key={flower.id_prd} data={flower} ></ItemFlower>)\r\n           })}\r\n          \r\n       </ScrollView>\r\n       \r\n       </View>\r\n       </ScrollView>\r\n    );\r\n}\r\n\r\nexport default Product;\r\n"]},"metadata":{},"sourceType":"module"}